---
title: "Initial Exploratory Data Analysis"
subtitle: |
  | Spotify Sequential Skip Prediction
  | Information Visualization (COMM 395) Final Project
author: "Andrew, Maya, Tina, Sheena"
date: today

format:
  html:
    toc: true
    embed-resources: true
    
execute:
  echo: false
  warning: false

from: markdown+emoji 
reference-location: margin
citation-location: margin
---

::: {.callout-tip icon=false}

## Github Repo Link

[https://github.com/sheena-tan/final-project.git](https://github.com/sheena-tan/final-project.git)

:::

## Introduction

Spotify, an online music streaming platform with over 190 million active users and over 40 million tracks, faces a key challenge: how do you recommend the right music to right user? Out of a robust body of literature on recommendation systems, little work describes how users sequentially interact with recommended content. This gap is particularly evident in the music domain, where understanding when and why users skip tracks serves as crucial implicit feedback. The [Music Streaming Sessions Dataset](https://www.aicrowd.com/challenges/spotify-sequential-skip-prediction-challenge) was released by Spotify in 2018 to encourage research on this overlooked aspect of streaming. 

Through exploratory data analysis and visualization, this project hopes to provide an elementary solution (within the bounds of knowledge learned in class) to Spotify's challenge: **Predict whether individual tracks encountered in a listening session will be skipped by a particular user.** 

The prediction output is a binary variable indicating if the track was skipped (`1`) or not skipped (`0`). The data set provides information about each user's listening session, including metadata and acoustic descriptors for all tracks encountered. This project uses the `skip_2` field of the session logs as ground truth/the target variable as the original challenge does. 

## Data Overview

### Data Source

Given laptop constraints, this project uses the miniature version of the [Music Streaming Sessions Dataset](https://www.aicrowd.com/challenges/spotify-sequential-skip-prediction-challenge), which is a minimally sized version of the original training set and track features provided by Spotify for challenge users to familiarize themselves with the data set. For more information on the data used, please refer to the `README.me` in the `\data` folder.

### Data quality & complexity check

We join the `session_logs` and `track_features` datasets according to the `track_id` key to create our workable `spotify_data` datset with 167,880 observations of 47 variables. Each observation corresponds to the playback of one track, for a total of 167,880 tracks listened to during 10,000 unique listening sessions, representing 50,704 unique tracks. 

We have 2 **character** variables, 1 **Date** variable, 6 **factor** variables, 6 **logical** variables, and 32 **numeric** variables, of which 10 are **boolean** variables. 

There is no missingness.

```{r, echo = TRUE}
## load packages ----
library(tidyverse)
library(tidymodels)
library(patchwork)
library(here)

## load data ----
session_logs <- read_csv(here("data/session_logs.csv")) |>
  janitor::clean_names() |>
  # factor categorical variables
  mutate(
    context_type = factor(context_type),
    hist_user_behavior_reason_start = factor(hist_user_behavior_reason_start),
    hist_user_behavior_reason_end = factor(hist_user_behavior_reason_end)
  ) |>
  rename(track_id = track_id_clean)

track_features <- read_csv(here("data/track_features.csv")) |>
  janitor::clean_names() |>
  mutate(
    mode = factor(mode),
    time_signature = factor(time_signature, ordered = TRUE),
    key = factor(key, ordered = TRUE)
  ) |>
  # removing variables that were not defined in the original dataset
  select(!c("flatness", "mechanism", "organism"))

## join data ----
spotify_data <- inner_join(session_logs, track_features, by = "track_id")

spotify_data |> skimr::skim_without_charts()
```

### Target Variable Analysis (Univariate)
There are no data issues, missingness issues, or skewness with the target variable, and the distribution of TRUE and FALSE values is roughly evenly split. 

Interestingly, stacked bar analyses suggest that the majority of songs that are skipped (`skip_2`) typically were also ***skipped to***, whereas the songs that were not skipped were typically played from another song being played through. In other words, if the user skipped a song to get to the current song (`hist_user_behavior_reason_start` == "fwdbtn"), then the current song is more likely to be skipped too. 

The auditory feature variables that are measured from 0.0 to 1.0, like acousticness and danceability could potentially be inverse-log transformed so the differences between tracks are more meaningful. 

```{r, echo = TRUE} 
## split data ----
set.seed(1104)

# initial split
spotify_split <- spotify_data |>
  group_initial_split(group = "session_id", prop = 0.8)

spotify_train <- spotify_split |> training()
spotify_test <- spotify_split |> testing()

# split for eda
spotify_split_eda <- spotify_train |>
  group_initial_split(group = "session_id", prop = 0.2)

spotify_eda <- spotify_split_eda |> training()

plot_stacked_bar <- function(data, x_variable, fill_variable) {
  ggplot(data, aes({{x_variable}}, fill = {{fill_variable}})) +
    geom_bar(position = "stack") +
    theme(legend.position = "bottom", legend.title = element_blank())
}

plot1 <- spotify_eda |> plot_stacked_bar(skip_2, context_type)
plot2 <- spotify_eda |> plot_stacked_bar(skip_2, hist_user_behavior_reason_start)
plot3 <- spotify_eda |> plot_stacked_bar(skip_2, hist_user_behavior_reason_end)
plot4 <- spotify_eda |> plot_stacked_bar(skip_2, key)
plot5 <- spotify_eda |> plot_stacked_bar(skip_2, mode)
plot6 <- spotify_eda |> plot_stacked_bar(skip_2, time_signature)

plot1 + plot2
plot3 + plot4
plot5 + plot6

```

## Plan of Investigation

### Potential data visualizations
Studying how people listen to music provides valuable insights into their habits. We can analyze whether they skip songs but then return to them, how frequently they skip songs altogether, who is more likely to skip (such as premium or non-premium users, and whether they're listening to their own playlists or curated ones), and when they tend to skip songs (such as at certain times of the day or during particular seasons). These insights can help us improve the listening experience. For example, if many users consistently skip a certain part of a song, we can collaborate with artists to refine those sections or recommend similar songs that might better align with their preferences. Additionally, we can use this data to customize playlists and recommendations based on the time of day or seasonal trends, enhancing the overall enjoyment for listeners.Through our initial exploration, we were able to confirm that we could work with the Spotify data to visualize the answer some, or all, of these questions.

### Importance/Application of data
The data and visualizations depicting user listening trends are crucial for various stakeholders within the music industry. They provide valuable insights into consumer behavior, preferences, and engagement patterns, which are instrumental for music streaming platforms, artists, record labels, advertisers, and even music researchers. For streaming platforms, such as Spotify or Apple Music, this data is essential for refining algorithms, optimizing user experience, and tailoring content recommendations to enhance user retention and satisfaction. Artists and record labels can leverage these insights to better understand their audience and refine their creative strategies, including song structure, release timing, and genre experimentation. Advertisers can use this data to target specific demographics more effectively, while researchers can gain valuable insights into societal trends, cultural preferences, and the impact of technology on music consumption habits. In essence, these data-driven visualizations are indispensable tools for decision-making and strategy formulation across the music industry.

### Limitations of data
One limitation of this project is the data does not cover all influences that could prompt users to skip over songs, such as album art, the mood of the listener, the familiarity of the listener with the music, the context in which they are listening, whether the song came on shuffle play, potential technical issues, or other external disturbances. We believe we can draw connections between the data we do have to draw inferences (such as the time of day songs are skipped and the songs’ release dates)—however, we do acknowledge that many other factors not covered in our project scope may influence users’ decision to skip songs.

## References
Spotify. (2018). *Spotify sequential Skip Prediction Challenge: Challenges*. AIcrowd. [https://www.aicrowd.com/challenges/spotify-sequential-skip-prediction-challenge](https://www.aicrowd.com/challenges/spotify-sequential-skip-prediction-challenge)

Brost, B., Mehrotra, R., & Jehan, T. (2019, May). The music streaming sessions dataset. In *The World Wide Web Conference* (pp. 2594-2600).

## Appendices

